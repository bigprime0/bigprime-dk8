export default {
  'breadcrumb.cluster': 'Cluster Management',
  'kubernetes.cluster.id': 'Id',
  'kubernetes.cluster.name': 'Name',
  'kubernetes.cluster.node': 'Node',
  'kubernetes.cluster.version': 'Version',
  'kubernetes.labels': 'labels',
  'kubernetes.internalIp': 'internalIp',
  'kubernetes.roles': 'Roles',
  'kubernetes.cpu': 'CPU',
  'kubernetes.memory': 'Memory',
  'kubernetes.taints': 'Taints',
  'kubernetes.operatingSystem': 'OS',
  'kubernetes.osImage': 'osImage',
  'kubernetes.version': 'Version',

  'kubernetes.confirm.cordon': 'Are you sure you want to perform the Cordon operation?',
  'kubernetes.confirm.unCordon': 'Are you sure you want to perform the unCordon operation?',
  'kubernetes.confirm.drain': 'Are you sure you want to perform the Drain operation?',

  'kubernetes.search.namespace': 'Select Namespace',
  'kubernetes.namespace': 'Namespace',
  'kubernetes.pods': 'Pods',
  'kubernetes.pod.operator.edit': 'Edit',
  'kubernetes.pod.operator.log': 'Log',
  'kubernetes.pod.operator.descr': 'Describe',
  'kubernetes.pod.operator.shell': 'Shell',


  'kubernetes.replicas': 'Replicas',
  'kubernetes.containers': 'Containers',
  'kubernetes.controlledBy': 'Controlled By',
  'kubernetes.node': 'Node',
  'kubernetes.qos': 'Qos',
  'kubernetes.age': 'Age',
  'kubernetes.restart': 'Restart',
  'kubernetes.desired': 'Desired',
  'kubernetes.current': 'Current',
  'kubernetes.Ready': 'Ready',
  'kubernetes.completions': 'Completions',
  'kubernetes.conditions': 'Conditions',
  'kubernetes.daemonSet.desired': 'Desired',
  'kubernetes.daemonSet.current': 'Current',
  'kubernetes.daemonSet.ready': 'Ready',
  'kubernetes.daemonSet.updated': 'Up-to-date',
  'kubernetes.daemonSet.available': 'Available',
  'kubernetes.daemonSet.nodeSelector': 'Node Selector',
  'kubernetes.event.message': 'Message/Action',
  'kubernetes.event.involvedObject': 'Involved Object',
  'kubernetes.event.source': 'Source',
  'kubernetes.event.count': 'Count',
  'kubernetes.event.reason': 'Reason',

  'kubernetes.configMap.key': 'Keys',
  'kubernetes.secret.type': 'Type',
  'kubernetes.hpa.metrics': 'Metrics',
  'kubernetes.hpa.minReplicas': 'Min Replicas',
  'kubernetes.hpa.maxReplicas': 'Max Replicas',
  'kubernetes.hpa.currentReplicas': 'Current Replicas',
  'kubernetes.hpa.status': 'Status',
  'kubernetes.pdb.maxUnavailable': 'Max Unavailable',
  'kubernetes.pdb.currentHealthy': 'Current Healthy',
  'kubernetes.pdb.desiredHealthy': 'Desired Healthy',

  'kubernetes.priorityClass.value': 'Value',
  'kubernetes.priorityClass.preemptionPolicy': 'Preemption Policy',
  'kubernetes.priorityClass.description': 'Description',
  'kubernetes.leases.holder': 'Holder',
  'kubernetes.webhooks': 'Webhooks',

  'kubernetes.service.type': 'Type',
  'kubernetes.service.clusterIP': 'ClusterIP',
  'kubernetes.service.ports': 'Ports',
  'kubernetes.service.selector': 'Selector',
  'kubernetes.service.endpoints': 'Endpoints',

  'kubernetes.ingress.loadBalances': 'LoadBalances',
  'kubernetes.ingress.className': 'IngressClassName',
  'kubernetes.ingress.rules': 'Rules',

  'kubernetes.ingressClass.controller': 'Controller',
  'kubernetes.ingressClass.apiGroup': 'ApiGroup',
  'kubernetes.ingressClass.scope': 'Scope',
  'kubernetes.ingressClass.kind': 'Kind',
  'kubernetes.ingress.policyTypes': 'PolicyTypes',

  'kubernetes.storage.storageClass': 'StorageClass',
  'kubernetes.storage.size': 'Size',
  'kubernetes.storage.pods': 'Pods',
  'kubernetes.storage.status': 'Status',
  'kubernetes.storage.claim': 'Claim',
  'kubernetes.storage.provisioner': 'Provisioner',
  'kubernetes.storage.reclaimPolicy': 'ReclaimPolicy',
  'kubernetes.storage.default': 'Default'
}
